"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var debug = require("debug");
var _general_1 = require("../common/_general");
var _general_2 = require("../common/_general");
var trigonometry_1 = require("../trigonometry");
var ISNAN = Number.isNaN, R_FINITE = Number.isFinite;
var fabs = Math.abs;
var printer = debug('pcauchy');
function pcauchy(x, location, scale, lowerTail, logP) {
    if (location === void 0) { location = 0; }
    if (scale === void 0) { scale = 1; }
    if (lowerTail === void 0) { lowerTail = true; }
    if (logP === void 0) { logP = false; }
    if (ISNAN(x) || ISNAN(location) || ISNAN(scale))
        return x + location + scale;
    if (scale <= 0) {
        return _general_1.ML_ERR_return_NAN(printer);
    }
    x = (x - location) / scale;
    if (ISNAN(x)) {
        return _general_1.ML_ERR_return_NAN(printer);
    }
    if (!R_FINITE(x)) {
        if (x < 0)
            return _general_1.R_DT_0(lowerTail, logP);
        else
            return _general_1.R_DT_1(lowerTail, logP);
    }
    if (!lowerTail)
        x = -x;
    if (fabs(x) > 1) {
        var y = trigonometry_1.atanpi(1 / x);
        return x > 0 ? _general_2.R_D_Clog(logP, y) : _general_1.R_D_val(logP, -y);
    }
    else {
        return _general_1.R_D_val(logP, 0.5 + trigonometry_1.atanpi(x));
    }
}
exports.pcauchy = pcauchy;
//# sourceMappingURL=pcauchy.js.map