"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var debug = require("debug");
var _general_1 = require("../common/_general");
var expm1_1 = require("../exp/expm1");
var dhyper_1 = require("./dhyper");
var floor = Math.floor, R_forceint = Math.round, log1p = Math.log1p;
var DBL_EPSILON = Number.EPSILON, ISNAN = Number.isNaN, R_FINITE = Number.isFinite;
function pdhyper(x, NR, NB, n, log_p) {
    var sum = 0;
    var term = 1;
    while (x > 0 && term >= DBL_EPSILON * sum) {
        term *= x * (NB - n + x) / (n + 1 - x) / (NR + 1 - x);
        sum += term;
        x--;
    }
    var ss = sum;
    return log_p ? log1p(ss) : 1 + ss;
}
var printer_phyper = debug('phyper');
function phyper(x, nr, nb, nn, lowerTail, logP) {
    if (lowerTail === void 0) { lowerTail = true; }
    if (logP === void 0) { logP = false; }
    var d;
    var pd;
    var lower_tail = lowerTail;
    var log_p = logP;
    var NR = nr;
    var NB = nb;
    var n = nn;
    if (ISNAN(x) || ISNAN(NR) || ISNAN(NB) || ISNAN(n))
        return x + NR + NB + n;
    x = floor(x + 1e-7);
    NR = R_forceint(NR);
    NB = R_forceint(NB);
    n = R_forceint(n);
    if (NR < 0 || NB < 0 || !R_FINITE(NR + NB) || n < 0 || n > NR + NB) {
        return _general_1.ML_ERR_return_NAN(printer_phyper);
    }
    if (x * (NR + NB) > n * NR) {
        var oldNB = NB;
        NB = NR;
        NR = oldNB;
        x = n - x - 1;
        lower_tail = !lower_tail;
    }
    if (x < 0)
        return _general_1.R_DT_0(lower_tail, log_p);
    if (x >= NR || x >= n)
        return _general_1.R_DT_1(lower_tail, log_p);
    d = dhyper_1.dhyper(x, NR, NB, n, log_p);
    pd = pdhyper(x, NR, NB, n, log_p);
    return log_p
        ? expm1_1.R_DT_log(lower_tail, log_p, d + pd)
        : _general_1.R_D_Lval(lower_tail, d * pd);
}
exports.phyper = phyper;
//# sourceMappingURL=phyper.js.map