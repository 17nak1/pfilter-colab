'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var debug = require("debug");
var _general_1 = require("../common/_general");
var choose_1 = require("../common/choose");
var cwilcox_1 = require("./cwilcox");
var WilcoxonCache_1 = require("./WilcoxonCache");
var R_forceint = Math.round, fabs = Math.abs, log = Math.log;
var ISNAN = Number.isNaN;
var printer_dwilcox = debug('dwilcox');
function dwilcox(x, m, n, giveLog) {
    if (giveLog === void 0) { giveLog = false; }
    m = R_forceint(m);
    n = R_forceint(n);
    var w = new WilcoxonCache_1.WilcoxonCache();
    if (ISNAN(x) || ISNAN(m) || ISNAN(n)) {
        return (x + m + n);
    }
    if (m <= 0 || n <= 0) {
        return _general_1.ML_ERR_return_NAN(printer_dwilcox);
    }
    if (fabs(x - R_forceint(x)) > 1e-7) {
        return _general_1.R_D__0(giveLog);
    }
    x = R_forceint(x);
    if (x < 0 || x > m * n) {
        return _general_1.R_D__0(giveLog);
    }
    return giveLog
        ? log(cwilcox_1.cwilcox(x, m, n, w)) - choose_1.internal_lchoose(m + n, n)
        : cwilcox_1.cwilcox(x, m, n, w) / choose_1.internal_choose(m + n, n);
}
exports.dwilcox = dwilcox;
//# sourceMappingURL=dwilcox.js.map