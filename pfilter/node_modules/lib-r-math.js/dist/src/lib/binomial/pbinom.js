"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var debug = require("debug");
var pbeta_1 = require("../beta/pbeta");
var _general_1 = require("../common/_general");
var printer = debug('pbinom');
var floor = Math.floor, R_forceint = Math.round;
var ISNAN = Number.isNaN, R_FINITE = Number.isFinite;
function pbinom(x, n, p, lowerTail, logP) {
    if (lowerTail === void 0) { lowerTail = true; }
    if (logP === void 0) { logP = false; }
    if (ISNAN(x) || ISNAN(n) || ISNAN(p))
        return NaN;
    if (!R_FINITE(n) || !R_FINITE(p)) {
        return _general_1.ML_ERR_return_NAN(printer);
    }
    var lower_tail = lowerTail;
    var log_p = logP;
    if (_general_1.R_nonint(n)) {
        printer('non-integer n = %d', n);
        return _general_1.ML_ERR_return_NAN(printer);
    }
    n = R_forceint(n);
    if (n < 0 || p < 0 || p > 1)
        return _general_1.ML_ERR_return_NAN(printer);
    if (x < 0)
        return _general_1.R_DT_0(lower_tail, log_p);
    x = floor(x + 1e-7);
    if (n <= x)
        return _general_1.R_DT_1(lower_tail, log_p);
    printer('calling pbeta:(q=%d,a=%d,b=%d, l.t=%s, log=%s', p, x + 1, n - x, !lower_tail, log_p);
    return pbeta_1.pbeta(p, x + 1, n - x, !lower_tail, log_p);
}
exports.pbinom = pbinom;
//# sourceMappingURL=pbinom.js.map