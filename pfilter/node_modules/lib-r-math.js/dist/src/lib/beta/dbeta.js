"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var debug = require("debug");
var _general_1 = require("../common/_general");
var dbinom_1 = require("../binomial/dbinom");
var lbeta_1 = require("./lbeta");
var log = Math.log, log1p = Math.log1p;
var ISNAN = Number.isNaN, R_FINITE = Number.isFinite, ML_POSINF = Number.POSITIVE_INFINITY;
var printer = debug('dbeta');
function dbeta(x, a, b, asLog) {
    if (ISNAN(x) || ISNAN(a) || ISNAN(b))
        return x + a + b;
    if (a < 0 || b < 0)
        return _general_1.ML_ERR_return_NAN(printer);
    if (x < 0 || x > 1)
        return _general_1.R_D__0(asLog);
    if (a === 0 || b === 0 || !R_FINITE(a) || !R_FINITE(b)) {
        if (a === 0 && b === 0) {
            if (x === 0 || x === 1)
                return ML_POSINF;
            else
                return _general_1.R_D__0(asLog);
        }
        if (a === 0 || a / b === 0) {
            if (x === 0)
                return ML_POSINF;
            else
                return _general_1.R_D__0(asLog);
        }
        if (b === 0 || b / a === 0) {
            if (x === 1)
                return ML_POSINF;
            else
                return _general_1.R_D__0(asLog);
        }
        if (x === 0.5)
            return ML_POSINF;
        else
            return _general_1.R_D__0(asLog);
    }
    if (x === 0) {
        if (a > 1)
            return _general_1.R_D__0(asLog);
        if (a < 1)
            return ML_POSINF;
        return _general_1.R_D_val(asLog, b);
    }
    if (x === 1) {
        if (b > 1)
            return _general_1.R_D__0(asLog);
        if (b < 1)
            return ML_POSINF;
        return _general_1.R_D_val(asLog, a);
    }
    var lval;
    if (a <= 2 || b <= 2)
        lval = (a - 1) * log(x) + (b - 1) * log1p(-x) - lbeta_1.lbeta(a, b);
    else {
        lval = log(a + b - 1) + dbinom_1.dbinom_raw(a - 1, a + b - 2, x, 1 - x, true);
    }
    return _general_1.R_D_exp(asLog, lval);
}
exports.dbeta = dbeta;
//# sourceMappingURL=dbeta.js.map