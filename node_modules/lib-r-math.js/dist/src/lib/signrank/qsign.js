'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var debug = require("debug");
var _general_1 = require("../common/_general");
var expm1_1 = require("../exp/expm1");
var signrank_1 = require("./signrank");
var round = Math.round, trunc = Math.trunc, M_LN2 = Math.LN2, exp = Math.exp;
var ISNAN = Number.isNaN, R_FINITE = Number.isFinite, DBL_EPSILON = Number.EPSILON;
var printer_qsignrank = debug('qsignrank');
function qsignrank(x, n, lowerTail, logP) {
    if (lowerTail === void 0) { lowerTail = true; }
    if (logP === void 0) { logP = false; }
    var roundN = round(n);
    var u = roundN * (roundN + 1) / 2;
    var c = trunc(u / 2);
    var w = Array.from({ length: c + 1 }).fill(0);
    if (ISNAN(x) || ISNAN(n)) {
        return NaN;
    }
    if (!R_FINITE(n)) {
        return _general_1.ML_ERR_return_NAN(printer_qsignrank);
    }
    var rc = _general_1.R_Q_P01_check(logP, x);
    if (rc !== undefined) {
        return rc;
    }
    if (roundN <= 0) {
        return _general_1.ML_ERR_return_NAN(printer_qsignrank);
    }
    if (x === _general_1.R_DT_0(lowerTail, logP)) {
        return 0;
    }
    if (x === _general_1.R_DT_1(lowerTail, logP)) {
        return u;
    }
    if (logP || !lowerTail) {
        x = expm1_1.R_DT_qIv(lowerTail, logP, x);
    }
    var f = exp(-n * M_LN2);
    var p = 0;
    var q = 0;
    if (x <= 0.5) {
        x = x - 10 * DBL_EPSILON;
        while (true) {
            p += signrank_1.csignrank(q, roundN, u, c, w) * f;
            if (p >= x)
                break;
            q++;
        }
    }
    else {
        x = 1 - x + 10 * DBL_EPSILON;
        while (true) {
            p += signrank_1.csignrank(q, roundN, u, c, w) * f;
            if (p > x) {
                q = trunc(u - q);
                break;
            }
            q++;
        }
    }
    return q;
}
exports.qsignrank = qsignrank;
//# sourceMappingURL=qsign.js.map