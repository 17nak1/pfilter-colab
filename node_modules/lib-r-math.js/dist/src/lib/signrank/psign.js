'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var debug = require("debug");
var _general_1 = require("../common/_general");
var signrank_1 = require("./signrank");
var round = Math.round, trunc = Math.trunc, M_LN2 = Math.LN2, exp = Math.exp;
var ISNAN = Number.isNaN, R_FINITE = Number.isFinite;
var printer_psignrank = debug('psignrank');
function psignrank(x, n, lowerTail, logP) {
    if (lowerTail === void 0) { lowerTail = true; }
    if (logP === void 0) { logP = false; }
    var roundN = round(n);
    var u = roundN * (roundN + 1) / 2;
    var c = trunc(u / 2);
    var w = Array.from({ length: c + 1 }).fill(0);
    x = round(x + 1e-7);
    var lowerT = lowerTail;
    if (ISNAN(x) || ISNAN(n))
        return NaN;
    if (!R_FINITE(n))
        return _general_1.ML_ERR_return_NAN(printer_psignrank);
    if (n <= 0)
        return _general_1.ML_ERR_return_NAN(printer_psignrank);
    if (x < 0.0) {
        return _general_1.R_DT_0(lowerTail, logP);
    }
    if (x >= u) {
        return _general_1.R_DT_1(lowerTail, logP);
    }
    var f = exp(-roundN * M_LN2);
    var p = 0;
    if (x <= u / 2) {
        for (var i = 0; i <= x; i++) {
            p += signrank_1.csignrank(i, roundN, u, c, w) * f;
        }
    }
    else {
        x = n * (n + 1) / 2 - x;
        for (var i = 0; i < x; i++) {
            p += signrank_1.csignrank(i, roundN, u, c, w) * f;
        }
        lowerT = !lowerT;
    }
    return _general_1.R_DT_val(lowerT, logP, p);
}
exports.psignrank = psignrank;
//# sourceMappingURL=psign.js.map