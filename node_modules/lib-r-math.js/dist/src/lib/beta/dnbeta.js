"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var debug = require("debug");
var _general_1 = require("../common/_general");
var dpois_1 = require("../poisson/dpois");
var dbeta_1 = require("./dbeta");
var ln = Math.log, sqrt = Math.sqrt, ceil = Math.ceil;
var ISNAN = Number.isNaN, R_FINITE = Number.isFinite;
var printer = debug('dnbeta');
function dnbeta(x, a, b, ncp, give_log) {
    var eps = 1e-15;
    var kMax;
    var k;
    var ncp2;
    var dx2;
    var d;
    var D;
    var term;
    var sum;
    var p_k;
    var q;
    if (ISNAN(x) || ISNAN(a) || ISNAN(b) || ISNAN(ncp))
        return x + a + b + ncp;
    if (ncp < 0 || a <= 0 || b <= 0) {
        return _general_1.ML_ERR_return_NAN(printer);
    }
    if (!R_FINITE(a) || !R_FINITE(b) || !R_FINITE(ncp)) {
        return _general_1.ML_ERR_return_NAN(printer);
    }
    if (x < 0 || x > 1) {
        return _general_1.R_D__0(give_log);
    }
    if (ncp === 0) {
        return dbeta_1.dbeta(x, a, b, give_log);
    }
    ncp2 = 0.5 * ncp;
    dx2 = ncp2 * x;
    d = (dx2 - a - 1) / 2;
    D = d * d + dx2 * (a + b) - a;
    if (D <= 0) {
        kMax = 0;
    }
    else {
        D = ceil(d + sqrt(D));
        kMax = D > 0 ? D : 0;
    }
    term = dbeta_1.dbeta(x, a + kMax, b, true);
    p_k = dpois_1.dpois_raw(kMax, ncp2, true);
    if (x === 0 || !R_FINITE(term) || !R_FINITE(p_k)) {
        return _general_1.R_D_exp(give_log, p_k + term);
    }
    p_k += term;
    sum = term = 1;
    k = kMax;
    while (k > 0 && term > sum * eps) {
        k--;
        q = (k + 1) * (k + a) / (k + a + b) / dx2;
        term *= q;
        sum += term;
    }
    term = 1;
    k = kMax;
    do {
        q = dx2 * (k + a + b) / (k + a) / (k + 1);
        k++;
        term *= q;
        sum += term;
    } while (term > sum * eps);
    return _general_1.R_D_exp(give_log, p_k + ln(sum));
}
exports.dnbeta = dnbeta;
//# sourceMappingURL=dnbeta.js.map