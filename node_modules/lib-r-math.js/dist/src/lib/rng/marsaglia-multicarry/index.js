'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var fixup_1 = require("../fixup");
var irng_1 = require("../irng");
var irng_type_1 = require("../irng-type");
var timeseed_1 = require("../timeseed");
var SEED_LEN = 2;
var MarsagliaMultiCarry = (function (_super) {
    __extends(MarsagliaMultiCarry, _super);
    function MarsagliaMultiCarry(_seed) {
        if (_seed === void 0) { _seed = timeseed_1.timeseed(); }
        return _super.call(this, _seed) || this;
    }
    MarsagliaMultiCarry.prototype.fixupSeeds = function () {
        var s = this.m_seed;
        if (s[0] === 0)
            s[0] = 1;
        if (s[1] === 0)
            s[1] = 1;
        return;
    };
    MarsagliaMultiCarry.prototype.init = function (_seed) {
        if (_seed === void 0) { _seed = timeseed_1.timeseed(); }
        var s = new Int32Array([_seed]);
        for (var j = 0; j < 50; j++) {
            s[0] = 69069 * s[0] + 1;
        }
        for (var j = 0; j < this.m_seed.length; j++) {
            s[0] = 69069 * s[0] + 1;
            this.m_seed[j] = s[0];
        }
        this.fixupSeeds();
        _super.prototype.init.call(this, _seed);
    };
    MarsagliaMultiCarry.prototype._setup = function () {
        this._kind = irng_type_1.IRNGType.MARSAGLIA_MULTICARRY;
        this._name = 'Marsaglia-MultiCarry';
        this.m_seed = new Int32Array(new ArrayBuffer(SEED_LEN * 4)).fill(0);
    };
    MarsagliaMultiCarry.prototype.internal_unif_rand = function () {
        var s = this.m_seed;
        s[0] = 36969 * (s[0] & 65535) + (s[0] >>> 16);
        s[1] = 18000 * (s[1] & 65535) + (s[1] >>> 16);
        var un = new Uint32Array(SEED_LEN);
        un[0] = s[0] << 16;
        un[1] = s[1] & 0xffff;
        un[0] = un[0] ^ un[1];
        return fixup_1.fixup(un[0] * fixup_1.i2_32m1);
    };
    Object.defineProperty(MarsagliaMultiCarry.prototype, "seed", {
        get: function () {
            return Array.from(this.m_seed);
        },
        set: function (_seed) {
            if (_seed.length > this.m_seed.length || _seed.length === 0) {
                this.init(timeseed_1.timeseed());
                return;
            }
            this.m_seed.set(_seed);
        },
        enumerable: true,
        configurable: true
    });
    return MarsagliaMultiCarry;
}(irng_1.IRNG));
exports.MarsagliaMultiCarry = MarsagliaMultiCarry;
//# sourceMappingURL=index.js.map